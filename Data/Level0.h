#pragma once
#include <vector>

enum NUMBERS
{
	LEVEL = 0,
	FOODS = 1,
	PLAYERS = 2,
	ENEMIES = 3,
};

enum LEVEL : NUMBERS
{
	AIR = 4,
	LADDER = 5,
	PLATFORM = 6,
	LADDERPLATFORM = 7,
};

enum FOODS : NUMBERS
{
	TOP = 8,
	BOTTOM = 9,
	LETTUCE = 10,
	TOMATO = 11,
	MEAT = 12,
	CHEESE = 13,
	PLATE = 14,
};

enum PLAYERS : NUMBERS
{
	PEPPER = 15,
	SALT = 16,
	HOTDOG = 17,
};

enum ENEMIES : NUMBERS
{
	HOTDOG = 18,
	PICKLE = 19,
	EGG = 20,
};

struct Levels
{
	std::vector<NUMBERS> myLevel
	{
		NUMBERS::LEVEL,
		//1
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		//2
		5, 4, 4, 4, 5, 4, 5, 4, 5, 4, 4, 4, 5, 4, 4, 4, 5,
		//3
		7, 6, 6, 6, 7, 4, 5, 4, 7, 6, 6, 6, 7, 6, 6, 6, 7,
		//4
		4, 4, 5, 4, 7, 6, 7, 6, 7, 4, 5, 4, 5, 4, 4, 4, 5,
		//5
		6, 6, 7, 6, 7, 4, 4, 4, 5, 4, 5, 4, 7, 6, 6, 6, 7,
		//6
		5, 4, 5, 4, 7, 6, 6, 6, 7, 6, 7, 6, 7, 4, 5, 4, 4,
		//7
		5, 6, 6, 6, 5, 5, 4, 4, 5, 4, 4, 4, 7, 6, 7, 6, 6,
		//8
		7, 6, 6, 6, 7, 6, 6, 6, 7, 6, 6, 6, 7, 4, 5, 4, 5,
		//9
		5, 6, 6, 6, 5, 5, 4, 4, 5, 4, 4, 4, 5, 4, 5, 4, 5,
		//10
		7, 6, 6, 6, 7, 6, 6, 6, 7, 6, 6, 6, 7, 6, 7, 6, 7,
		//11
		4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
		//12
		4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,

	};
	std::vector<NUMBERS> myLevelWORDS
	{
		NUMBERS::LEVEL,
		//1
		LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM,
		//2
		LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER,
		//3
		LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM,
		//4
		LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER,
		//5
		LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM,
		//6
		LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR,
		//7
		LEVEL::LADDER, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDER, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM,
		//8
		LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER,
		//9
		LEVEL::LADDER, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDER, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER, LEVEL::AIR, LEVEL::LADDER,
		//10
		LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM, LEVEL::PLATFORM, LEVEL::LADDERPLATFORM,
		//11
		LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR,
		//12
		LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR, LEVEL::AIR,
	};
}